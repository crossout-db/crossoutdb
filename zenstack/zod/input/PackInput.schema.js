"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const PackSelect_schema_1 = require("../objects/PackSelect.schema");
const PackInclude_schema_1 = require("../objects/PackInclude.schema");
const PackWhereUniqueInput_schema_1 = require("../objects/PackWhereUniqueInput.schema");
const PackWhereInput_schema_1 = require("../objects/PackWhereInput.schema");
const PackOrderByWithRelationInput_schema_1 = require("../objects/PackOrderByWithRelationInput.schema");
const PackScalarFieldEnum_schema_1 = require("../enums/PackScalarFieldEnum.schema");
const PackCreateInput_schema_1 = require("../objects/PackCreateInput.schema");
const PackUncheckedCreateInput_schema_1 = require("../objects/PackUncheckedCreateInput.schema");
const PackCreateManyInput_schema_1 = require("../objects/PackCreateManyInput.schema");
const PackUpdateInput_schema_1 = require("../objects/PackUpdateInput.schema");
const PackUncheckedUpdateInput_schema_1 = require("../objects/PackUncheckedUpdateInput.schema");
const PackUpdateManyMutationInput_schema_1 = require("../objects/PackUpdateManyMutationInput.schema");
const PackUncheckedUpdateManyInput_schema_1 = require("../objects/PackUncheckedUpdateManyInput.schema");
const PackCountAggregateInput_schema_1 = require("../objects/PackCountAggregateInput.schema");
const PackMinAggregateInput_schema_1 = require("../objects/PackMinAggregateInput.schema");
const PackMaxAggregateInput_schema_1 = require("../objects/PackMaxAggregateInput.schema");
const PackAvgAggregateInput_schema_1 = require("../objects/PackAvgAggregateInput.schema");
const PackSumAggregateInput_schema_1 = require("../objects/PackSumAggregateInput.schema");
const PackOrderByWithAggregationInput_schema_1 = require("../objects/PackOrderByWithAggregationInput.schema");
const PackScalarWhereWithAggregatesInput_schema_1 = require("../objects/PackScalarWhereWithAggregatesInput.schema");
exports.PackInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), where: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema, PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(PackScalarFieldEnum_schema_1.PackScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema, PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(PackScalarFieldEnum_schema_1.PackScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), data: zod_1.z.union([PackCreateInput_schema_1.PackCreateInputObjectSchema, PackUncheckedCreateInput_schema_1.PackUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([PackCreateManyInput_schema_1.PackCreateManyInputObjectSchema, zod_1.z.array(PackCreateManyInput_schema_1.PackCreateManyInputObjectSchema)]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), where: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), data: zod_1.z.union([PackUpdateInput_schema_1.PackUpdateInputObjectSchema, PackUncheckedUpdateInput_schema_1.PackUncheckedUpdateInputObjectSchema]), where: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([PackUpdateManyMutationInput_schema_1.PackUpdateManyMutationInputObjectSchema, PackUncheckedUpdateManyInput_schema_1.PackUncheckedUpdateManyInputObjectSchema]), where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => PackSelect_schema_1.PackSelectObjectSchema.optional()), include: zod_1.z.lazy(() => PackInclude_schema_1.PackIncludeObjectSchema.optional()), where: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema, create: zod_1.z.union([PackCreateInput_schema_1.PackCreateInputObjectSchema, PackUncheckedCreateInput_schema_1.PackUncheckedCreateInputObjectSchema]), update: zod_1.z.union([PackUpdateInput_schema_1.PackUpdateInputObjectSchema, PackUncheckedUpdateInput_schema_1.PackUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema, PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), PackCountAggregateInput_schema_1.PackCountAggregateInputObjectSchema]).optional(), _min: PackMinAggregateInput_schema_1.PackMinAggregateInputObjectSchema.optional(), _max: PackMaxAggregateInput_schema_1.PackMaxAggregateInputObjectSchema.optional(), _avg: PackAvgAggregateInput_schema_1.PackAvgAggregateInputObjectSchema.optional(), _sum: PackSumAggregateInput_schema_1.PackSumAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PackOrderByWithAggregationInput_schema_1.PackOrderByWithAggregationInputObjectSchema, PackOrderByWithAggregationInput_schema_1.PackOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PackScalarWhereWithAggregatesInput_schema_1.PackScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(PackScalarFieldEnum_schema_1.PackScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), PackCountAggregateInput_schema_1.PackCountAggregateInputObjectSchema]).optional(), _min: PackMinAggregateInput_schema_1.PackMinAggregateInputObjectSchema.optional(), _max: PackMaxAggregateInput_schema_1.PackMaxAggregateInputObjectSchema.optional(), _avg: PackAvgAggregateInput_schema_1.PackAvgAggregateInputObjectSchema.optional(), _sum: PackSumAggregateInput_schema_1.PackSumAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: PackWhereInput_schema_1.PackWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema, PackOrderByWithRelationInput_schema_1.PackOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: PackWhereUniqueInput_schema_1.PackWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(PackScalarFieldEnum_schema_1.PackScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), PackCountAggregateInput_schema_1.PackCountAggregateInputObjectSchema]).optional() })
};
