"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const ItemSelect_schema_1 = require("../objects/ItemSelect.schema");
const ItemInclude_schema_1 = require("../objects/ItemInclude.schema");
const ItemWhereUniqueInput_schema_1 = require("../objects/ItemWhereUniqueInput.schema");
const ItemWhereInput_schema_1 = require("../objects/ItemWhereInput.schema");
const ItemOrderByWithRelationInput_schema_1 = require("../objects/ItemOrderByWithRelationInput.schema");
const ItemScalarFieldEnum_schema_1 = require("../enums/ItemScalarFieldEnum.schema");
const ItemCreateInput_schema_1 = require("../objects/ItemCreateInput.schema");
const ItemUncheckedCreateInput_schema_1 = require("../objects/ItemUncheckedCreateInput.schema");
const ItemCreateManyInput_schema_1 = require("../objects/ItemCreateManyInput.schema");
const ItemUpdateInput_schema_1 = require("../objects/ItemUpdateInput.schema");
const ItemUncheckedUpdateInput_schema_1 = require("../objects/ItemUncheckedUpdateInput.schema");
const ItemUpdateManyMutationInput_schema_1 = require("../objects/ItemUpdateManyMutationInput.schema");
const ItemUncheckedUpdateManyInput_schema_1 = require("../objects/ItemUncheckedUpdateManyInput.schema");
const ItemCountAggregateInput_schema_1 = require("../objects/ItemCountAggregateInput.schema");
const ItemMinAggregateInput_schema_1 = require("../objects/ItemMinAggregateInput.schema");
const ItemMaxAggregateInput_schema_1 = require("../objects/ItemMaxAggregateInput.schema");
const ItemAvgAggregateInput_schema_1 = require("../objects/ItemAvgAggregateInput.schema");
const ItemSumAggregateInput_schema_1 = require("../objects/ItemSumAggregateInput.schema");
const ItemOrderByWithAggregationInput_schema_1 = require("../objects/ItemOrderByWithAggregationInput.schema");
const ItemScalarWhereWithAggregatesInput_schema_1 = require("../objects/ItemScalarWhereWithAggregatesInput.schema");
exports.ItemInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), where: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema, ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(ItemScalarFieldEnum_schema_1.ItemScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema, ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(ItemScalarFieldEnum_schema_1.ItemScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), data: zod_1.z.union([ItemCreateInput_schema_1.ItemCreateInputObjectSchema, ItemUncheckedCreateInput_schema_1.ItemUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([ItemCreateManyInput_schema_1.ItemCreateManyInputObjectSchema, zod_1.z.array(ItemCreateManyInput_schema_1.ItemCreateManyInputObjectSchema)]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), where: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), data: zod_1.z.union([ItemUpdateInput_schema_1.ItemUpdateInputObjectSchema, ItemUncheckedUpdateInput_schema_1.ItemUncheckedUpdateInputObjectSchema]), where: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([ItemUpdateManyMutationInput_schema_1.ItemUpdateManyMutationInputObjectSchema, ItemUncheckedUpdateManyInput_schema_1.ItemUncheckedUpdateManyInputObjectSchema]), where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => ItemSelect_schema_1.ItemSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ItemInclude_schema_1.ItemIncludeObjectSchema.optional()), where: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema, create: zod_1.z.union([ItemCreateInput_schema_1.ItemCreateInputObjectSchema, ItemUncheckedCreateInput_schema_1.ItemUncheckedCreateInputObjectSchema]), update: zod_1.z.union([ItemUpdateInput_schema_1.ItemUpdateInputObjectSchema, ItemUncheckedUpdateInput_schema_1.ItemUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema, ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), ItemCountAggregateInput_schema_1.ItemCountAggregateInputObjectSchema]).optional(), _min: ItemMinAggregateInput_schema_1.ItemMinAggregateInputObjectSchema.optional(), _max: ItemMaxAggregateInput_schema_1.ItemMaxAggregateInputObjectSchema.optional(), _avg: ItemAvgAggregateInput_schema_1.ItemAvgAggregateInputObjectSchema.optional(), _sum: ItemSumAggregateInput_schema_1.ItemSumAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ItemOrderByWithAggregationInput_schema_1.ItemOrderByWithAggregationInputObjectSchema, ItemOrderByWithAggregationInput_schema_1.ItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ItemScalarWhereWithAggregatesInput_schema_1.ItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(ItemScalarFieldEnum_schema_1.ItemScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), ItemCountAggregateInput_schema_1.ItemCountAggregateInputObjectSchema]).optional(), _min: ItemMinAggregateInput_schema_1.ItemMinAggregateInputObjectSchema.optional(), _max: ItemMaxAggregateInput_schema_1.ItemMaxAggregateInputObjectSchema.optional(), _avg: ItemAvgAggregateInput_schema_1.ItemAvgAggregateInputObjectSchema.optional(), _sum: ItemSumAggregateInput_schema_1.ItemSumAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: ItemWhereInput_schema_1.ItemWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema, ItemOrderByWithRelationInput_schema_1.ItemOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ItemWhereUniqueInput_schema_1.ItemWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(ItemScalarFieldEnum_schema_1.ItemScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), ItemCountAggregateInput_schema_1.ItemCountAggregateInputObjectSchema]).optional() })
};
