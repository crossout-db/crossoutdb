"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecipeInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const RecipeSelect_schema_1 = require("../objects/RecipeSelect.schema");
const RecipeInclude_schema_1 = require("../objects/RecipeInclude.schema");
const RecipeWhereUniqueInput_schema_1 = require("../objects/RecipeWhereUniqueInput.schema");
const RecipeWhereInput_schema_1 = require("../objects/RecipeWhereInput.schema");
const RecipeOrderByWithRelationInput_schema_1 = require("../objects/RecipeOrderByWithRelationInput.schema");
const RecipeScalarFieldEnum_schema_1 = require("../enums/RecipeScalarFieldEnum.schema");
const RecipeCreateInput_schema_1 = require("../objects/RecipeCreateInput.schema");
const RecipeUncheckedCreateInput_schema_1 = require("../objects/RecipeUncheckedCreateInput.schema");
const RecipeCreateManyInput_schema_1 = require("../objects/RecipeCreateManyInput.schema");
const RecipeUpdateInput_schema_1 = require("../objects/RecipeUpdateInput.schema");
const RecipeUncheckedUpdateInput_schema_1 = require("../objects/RecipeUncheckedUpdateInput.schema");
const RecipeUpdateManyMutationInput_schema_1 = require("../objects/RecipeUpdateManyMutationInput.schema");
const RecipeUncheckedUpdateManyInput_schema_1 = require("../objects/RecipeUncheckedUpdateManyInput.schema");
const RecipeCountAggregateInput_schema_1 = require("../objects/RecipeCountAggregateInput.schema");
const RecipeMinAggregateInput_schema_1 = require("../objects/RecipeMinAggregateInput.schema");
const RecipeMaxAggregateInput_schema_1 = require("../objects/RecipeMaxAggregateInput.schema");
const RecipeAvgAggregateInput_schema_1 = require("../objects/RecipeAvgAggregateInput.schema");
const RecipeSumAggregateInput_schema_1 = require("../objects/RecipeSumAggregateInput.schema");
const RecipeOrderByWithAggregationInput_schema_1 = require("../objects/RecipeOrderByWithAggregationInput.schema");
const RecipeScalarWhereWithAggregatesInput_schema_1 = require("../objects/RecipeScalarWhereWithAggregatesInput.schema");
exports.RecipeInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), where: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema, RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(RecipeScalarFieldEnum_schema_1.RecipeScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema, RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(RecipeScalarFieldEnum_schema_1.RecipeScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), data: zod_1.z.union([RecipeCreateInput_schema_1.RecipeCreateInputObjectSchema, RecipeUncheckedCreateInput_schema_1.RecipeUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([RecipeCreateManyInput_schema_1.RecipeCreateManyInputObjectSchema, zod_1.z.array(RecipeCreateManyInput_schema_1.RecipeCreateManyInputObjectSchema)]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), where: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), data: zod_1.z.union([RecipeUpdateInput_schema_1.RecipeUpdateInputObjectSchema, RecipeUncheckedUpdateInput_schema_1.RecipeUncheckedUpdateInputObjectSchema]), where: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([RecipeUpdateManyMutationInput_schema_1.RecipeUpdateManyMutationInputObjectSchema, RecipeUncheckedUpdateManyInput_schema_1.RecipeUncheckedUpdateManyInputObjectSchema]), where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => RecipeSelect_schema_1.RecipeSelectObjectSchema.optional()), include: zod_1.z.lazy(() => RecipeInclude_schema_1.RecipeIncludeObjectSchema.optional()), where: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema, create: zod_1.z.union([RecipeCreateInput_schema_1.RecipeCreateInputObjectSchema, RecipeUncheckedCreateInput_schema_1.RecipeUncheckedCreateInputObjectSchema]), update: zod_1.z.union([RecipeUpdateInput_schema_1.RecipeUpdateInputObjectSchema, RecipeUncheckedUpdateInput_schema_1.RecipeUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema, RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), RecipeCountAggregateInput_schema_1.RecipeCountAggregateInputObjectSchema]).optional(), _min: RecipeMinAggregateInput_schema_1.RecipeMinAggregateInputObjectSchema.optional(), _max: RecipeMaxAggregateInput_schema_1.RecipeMaxAggregateInputObjectSchema.optional(), _avg: RecipeAvgAggregateInput_schema_1.RecipeAvgAggregateInputObjectSchema.optional(), _sum: RecipeSumAggregateInput_schema_1.RecipeSumAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([RecipeOrderByWithAggregationInput_schema_1.RecipeOrderByWithAggregationInputObjectSchema, RecipeOrderByWithAggregationInput_schema_1.RecipeOrderByWithAggregationInputObjectSchema.array()]).optional(), having: RecipeScalarWhereWithAggregatesInput_schema_1.RecipeScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(RecipeScalarFieldEnum_schema_1.RecipeScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), RecipeCountAggregateInput_schema_1.RecipeCountAggregateInputObjectSchema]).optional(), _min: RecipeMinAggregateInput_schema_1.RecipeMinAggregateInputObjectSchema.optional(), _max: RecipeMaxAggregateInput_schema_1.RecipeMaxAggregateInputObjectSchema.optional(), _avg: RecipeAvgAggregateInput_schema_1.RecipeAvgAggregateInputObjectSchema.optional(), _sum: RecipeSumAggregateInput_schema_1.RecipeSumAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: RecipeWhereInput_schema_1.RecipeWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema, RecipeOrderByWithRelationInput_schema_1.RecipeOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: RecipeWhereUniqueInput_schema_1.RecipeWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(RecipeScalarFieldEnum_schema_1.RecipeScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), RecipeCountAggregateInput_schema_1.RecipeCountAggregateInputObjectSchema]).optional() })
};
