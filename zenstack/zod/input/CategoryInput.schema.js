"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CategoryInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const CategorySelect_schema_1 = require("../objects/CategorySelect.schema");
const CategoryInclude_schema_1 = require("../objects/CategoryInclude.schema");
const CategoryWhereUniqueInput_schema_1 = require("../objects/CategoryWhereUniqueInput.schema");
const CategoryWhereInput_schema_1 = require("../objects/CategoryWhereInput.schema");
const CategoryOrderByWithRelationInput_schema_1 = require("../objects/CategoryOrderByWithRelationInput.schema");
const CategoryScalarFieldEnum_schema_1 = require("../enums/CategoryScalarFieldEnum.schema");
const CategoryCreateInput_schema_1 = require("../objects/CategoryCreateInput.schema");
const CategoryUncheckedCreateInput_schema_1 = require("../objects/CategoryUncheckedCreateInput.schema");
const CategoryCreateManyInput_schema_1 = require("../objects/CategoryCreateManyInput.schema");
const CategoryUpdateInput_schema_1 = require("../objects/CategoryUpdateInput.schema");
const CategoryUncheckedUpdateInput_schema_1 = require("../objects/CategoryUncheckedUpdateInput.schema");
const CategoryUpdateManyMutationInput_schema_1 = require("../objects/CategoryUpdateManyMutationInput.schema");
const CategoryUncheckedUpdateManyInput_schema_1 = require("../objects/CategoryUncheckedUpdateManyInput.schema");
const CategoryCountAggregateInput_schema_1 = require("../objects/CategoryCountAggregateInput.schema");
const CategoryMinAggregateInput_schema_1 = require("../objects/CategoryMinAggregateInput.schema");
const CategoryMaxAggregateInput_schema_1 = require("../objects/CategoryMaxAggregateInput.schema");
const CategoryAvgAggregateInput_schema_1 = require("../objects/CategoryAvgAggregateInput.schema");
const CategorySumAggregateInput_schema_1 = require("../objects/CategorySumAggregateInput.schema");
const CategoryOrderByWithAggregationInput_schema_1 = require("../objects/CategoryOrderByWithAggregationInput.schema");
const CategoryScalarWhereWithAggregatesInput_schema_1 = require("../objects/CategoryScalarWhereWithAggregatesInput.schema");
exports.CategoryInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), where: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema, CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(CategoryScalarFieldEnum_schema_1.CategoryScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema, CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(CategoryScalarFieldEnum_schema_1.CategoryScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), data: zod_1.z.union([CategoryCreateInput_schema_1.CategoryCreateInputObjectSchema, CategoryUncheckedCreateInput_schema_1.CategoryUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([CategoryCreateManyInput_schema_1.CategoryCreateManyInputObjectSchema, zod_1.z.array(CategoryCreateManyInput_schema_1.CategoryCreateManyInputObjectSchema)]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), where: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), data: zod_1.z.union([CategoryUpdateInput_schema_1.CategoryUpdateInputObjectSchema, CategoryUncheckedUpdateInput_schema_1.CategoryUncheckedUpdateInputObjectSchema]), where: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([CategoryUpdateManyMutationInput_schema_1.CategoryUpdateManyMutationInputObjectSchema, CategoryUncheckedUpdateManyInput_schema_1.CategoryUncheckedUpdateManyInputObjectSchema]), where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => CategorySelect_schema_1.CategorySelectObjectSchema.optional()), include: zod_1.z.lazy(() => CategoryInclude_schema_1.CategoryIncludeObjectSchema.optional()), where: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema, create: zod_1.z.union([CategoryCreateInput_schema_1.CategoryCreateInputObjectSchema, CategoryUncheckedCreateInput_schema_1.CategoryUncheckedCreateInputObjectSchema]), update: zod_1.z.union([CategoryUpdateInput_schema_1.CategoryUpdateInputObjectSchema, CategoryUncheckedUpdateInput_schema_1.CategoryUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema, CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), CategoryCountAggregateInput_schema_1.CategoryCountAggregateInputObjectSchema]).optional(), _min: CategoryMinAggregateInput_schema_1.CategoryMinAggregateInputObjectSchema.optional(), _max: CategoryMaxAggregateInput_schema_1.CategoryMaxAggregateInputObjectSchema.optional(), _avg: CategoryAvgAggregateInput_schema_1.CategoryAvgAggregateInputObjectSchema.optional(), _sum: CategorySumAggregateInput_schema_1.CategorySumAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([CategoryOrderByWithAggregationInput_schema_1.CategoryOrderByWithAggregationInputObjectSchema, CategoryOrderByWithAggregationInput_schema_1.CategoryOrderByWithAggregationInputObjectSchema.array()]).optional(), having: CategoryScalarWhereWithAggregatesInput_schema_1.CategoryScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(CategoryScalarFieldEnum_schema_1.CategoryScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), CategoryCountAggregateInput_schema_1.CategoryCountAggregateInputObjectSchema]).optional(), _min: CategoryMinAggregateInput_schema_1.CategoryMinAggregateInputObjectSchema.optional(), _max: CategoryMaxAggregateInput_schema_1.CategoryMaxAggregateInputObjectSchema.optional(), _avg: CategoryAvgAggregateInput_schema_1.CategoryAvgAggregateInputObjectSchema.optional(), _sum: CategorySumAggregateInput_schema_1.CategorySumAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: CategoryWhereInput_schema_1.CategoryWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema, CategoryOrderByWithRelationInput_schema_1.CategoryOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: CategoryWhereUniqueInput_schema_1.CategoryWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(CategoryScalarFieldEnum_schema_1.CategoryScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), CategoryCountAggregateInput_schema_1.CategoryCountAggregateInputObjectSchema]).optional() })
};
