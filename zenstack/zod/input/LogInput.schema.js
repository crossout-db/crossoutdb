"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LogInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const LogSelect_schema_1 = require("../objects/LogSelect.schema");
const LogInclude_schema_1 = require("../objects/LogInclude.schema");
const LogWhereUniqueInput_schema_1 = require("../objects/LogWhereUniqueInput.schema");
const LogWhereInput_schema_1 = require("../objects/LogWhereInput.schema");
const LogOrderByWithRelationInput_schema_1 = require("../objects/LogOrderByWithRelationInput.schema");
const LogScalarFieldEnum_schema_1 = require("../enums/LogScalarFieldEnum.schema");
const LogCreateInput_schema_1 = require("../objects/LogCreateInput.schema");
const LogUncheckedCreateInput_schema_1 = require("../objects/LogUncheckedCreateInput.schema");
const LogCreateManyInput_schema_1 = require("../objects/LogCreateManyInput.schema");
const LogUpdateInput_schema_1 = require("../objects/LogUpdateInput.schema");
const LogUncheckedUpdateInput_schema_1 = require("../objects/LogUncheckedUpdateInput.schema");
const LogUpdateManyMutationInput_schema_1 = require("../objects/LogUpdateManyMutationInput.schema");
const LogUncheckedUpdateManyInput_schema_1 = require("../objects/LogUncheckedUpdateManyInput.schema");
const LogCountAggregateInput_schema_1 = require("../objects/LogCountAggregateInput.schema");
const LogMinAggregateInput_schema_1 = require("../objects/LogMinAggregateInput.schema");
const LogMaxAggregateInput_schema_1 = require("../objects/LogMaxAggregateInput.schema");
const LogAvgAggregateInput_schema_1 = require("../objects/LogAvgAggregateInput.schema");
const LogSumAggregateInput_schema_1 = require("../objects/LogSumAggregateInput.schema");
const LogOrderByWithAggregationInput_schema_1 = require("../objects/LogOrderByWithAggregationInput.schema");
const LogScalarWhereWithAggregatesInput_schema_1 = require("../objects/LogScalarWhereWithAggregatesInput.schema");
exports.LogInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), where: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema, LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(LogScalarFieldEnum_schema_1.LogScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema, LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(LogScalarFieldEnum_schema_1.LogScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), data: zod_1.z.union([LogCreateInput_schema_1.LogCreateInputObjectSchema, LogUncheckedCreateInput_schema_1.LogUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([LogCreateManyInput_schema_1.LogCreateManyInputObjectSchema, zod_1.z.array(LogCreateManyInput_schema_1.LogCreateManyInputObjectSchema)]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), where: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), data: zod_1.z.union([LogUpdateInput_schema_1.LogUpdateInputObjectSchema, LogUncheckedUpdateInput_schema_1.LogUncheckedUpdateInputObjectSchema]), where: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([LogUpdateManyMutationInput_schema_1.LogUpdateManyMutationInputObjectSchema, LogUncheckedUpdateManyInput_schema_1.LogUncheckedUpdateManyInputObjectSchema]), where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => LogSelect_schema_1.LogSelectObjectSchema.optional()), include: zod_1.z.lazy(() => LogInclude_schema_1.LogIncludeObjectSchema.optional()), where: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema, create: zod_1.z.union([LogCreateInput_schema_1.LogCreateInputObjectSchema, LogUncheckedCreateInput_schema_1.LogUncheckedCreateInputObjectSchema]), update: zod_1.z.union([LogUpdateInput_schema_1.LogUpdateInputObjectSchema, LogUncheckedUpdateInput_schema_1.LogUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema, LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), LogCountAggregateInput_schema_1.LogCountAggregateInputObjectSchema]).optional(), _min: LogMinAggregateInput_schema_1.LogMinAggregateInputObjectSchema.optional(), _max: LogMaxAggregateInput_schema_1.LogMaxAggregateInputObjectSchema.optional(), _avg: LogAvgAggregateInput_schema_1.LogAvgAggregateInputObjectSchema.optional(), _sum: LogSumAggregateInput_schema_1.LogSumAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([LogOrderByWithAggregationInput_schema_1.LogOrderByWithAggregationInputObjectSchema, LogOrderByWithAggregationInput_schema_1.LogOrderByWithAggregationInputObjectSchema.array()]).optional(), having: LogScalarWhereWithAggregatesInput_schema_1.LogScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(LogScalarFieldEnum_schema_1.LogScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), LogCountAggregateInput_schema_1.LogCountAggregateInputObjectSchema]).optional(), _min: LogMinAggregateInput_schema_1.LogMinAggregateInputObjectSchema.optional(), _max: LogMaxAggregateInput_schema_1.LogMaxAggregateInputObjectSchema.optional(), _avg: LogAvgAggregateInput_schema_1.LogAvgAggregateInputObjectSchema.optional(), _sum: LogSumAggregateInput_schema_1.LogSumAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: LogWhereInput_schema_1.LogWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema, LogOrderByWithRelationInput_schema_1.LogOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: LogWhereUniqueInput_schema_1.LogWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(LogScalarFieldEnum_schema_1.LogScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), LogCountAggregateInput_schema_1.LogCountAggregateInputObjectSchema]).optional() })
};
