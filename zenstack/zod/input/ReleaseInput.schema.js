"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReleaseInputSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
;
const ReleaseSelect_schema_1 = require("../objects/ReleaseSelect.schema");
const ReleaseInclude_schema_1 = require("../objects/ReleaseInclude.schema");
const ReleaseWhereUniqueInput_schema_1 = require("../objects/ReleaseWhereUniqueInput.schema");
const ReleaseWhereInput_schema_1 = require("../objects/ReleaseWhereInput.schema");
const ReleaseOrderByWithRelationInput_schema_1 = require("../objects/ReleaseOrderByWithRelationInput.schema");
const ReleaseScalarFieldEnum_schema_1 = require("../enums/ReleaseScalarFieldEnum.schema");
const ReleaseCreateInput_schema_1 = require("../objects/ReleaseCreateInput.schema");
const ReleaseUncheckedCreateInput_schema_1 = require("../objects/ReleaseUncheckedCreateInput.schema");
const ReleaseCreateManyInput_schema_1 = require("../objects/ReleaseCreateManyInput.schema");
const ReleaseUpdateInput_schema_1 = require("../objects/ReleaseUpdateInput.schema");
const ReleaseUncheckedUpdateInput_schema_1 = require("../objects/ReleaseUncheckedUpdateInput.schema");
const ReleaseUpdateManyMutationInput_schema_1 = require("../objects/ReleaseUpdateManyMutationInput.schema");
const ReleaseUncheckedUpdateManyInput_schema_1 = require("../objects/ReleaseUncheckedUpdateManyInput.schema");
const ReleaseCountAggregateInput_schema_1 = require("../objects/ReleaseCountAggregateInput.schema");
const ReleaseMinAggregateInput_schema_1 = require("../objects/ReleaseMinAggregateInput.schema");
const ReleaseMaxAggregateInput_schema_1 = require("../objects/ReleaseMaxAggregateInput.schema");
const ReleaseAvgAggregateInput_schema_1 = require("../objects/ReleaseAvgAggregateInput.schema");
const ReleaseSumAggregateInput_schema_1 = require("../objects/ReleaseSumAggregateInput.schema");
const ReleaseOrderByWithAggregationInput_schema_1 = require("../objects/ReleaseOrderByWithAggregationInput.schema");
const ReleaseScalarWhereWithAggregatesInput_schema_1 = require("../objects/ReleaseScalarWhereWithAggregatesInput.schema");
exports.ReleaseInputSchema = {
    findUnique: zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), where: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema }), findFirst: zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema, ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(ReleaseScalarFieldEnum_schema_1.ReleaseScalarFieldEnumSchema).optional() }), findMany: zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema, ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(ReleaseScalarFieldEnum_schema_1.ReleaseScalarFieldEnumSchema).optional() }), create: zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), data: zod_1.z.union([ReleaseCreateInput_schema_1.ReleaseCreateInputObjectSchema, ReleaseUncheckedCreateInput_schema_1.ReleaseUncheckedCreateInputObjectSchema]) }), createMany: zod_1.z.object({ data: zod_1.z.union([ReleaseCreateManyInput_schema_1.ReleaseCreateManyInputObjectSchema, zod_1.z.array(ReleaseCreateManyInput_schema_1.ReleaseCreateManyInputObjectSchema)]) }), 'delete': zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), where: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema }), deleteMany: zod_1.z.object({ where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional() }), update: zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), data: zod_1.z.union([ReleaseUpdateInput_schema_1.ReleaseUpdateInputObjectSchema, ReleaseUncheckedUpdateInput_schema_1.ReleaseUncheckedUpdateInputObjectSchema]), where: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema }), updateMany: zod_1.z.object({ data: zod_1.z.union([ReleaseUpdateManyMutationInput_schema_1.ReleaseUpdateManyMutationInputObjectSchema, ReleaseUncheckedUpdateManyInput_schema_1.ReleaseUncheckedUpdateManyInputObjectSchema]), where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional() }), upsert: zod_1.z.object({ select: zod_1.z.lazy(() => ReleaseSelect_schema_1.ReleaseSelectObjectSchema.optional()), include: zod_1.z.lazy(() => ReleaseInclude_schema_1.ReleaseIncludeObjectSchema.optional()), where: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema, create: zod_1.z.union([ReleaseCreateInput_schema_1.ReleaseCreateInputObjectSchema, ReleaseUncheckedCreateInput_schema_1.ReleaseUncheckedCreateInputObjectSchema]), update: zod_1.z.union([ReleaseUpdateInput_schema_1.ReleaseUpdateInputObjectSchema, ReleaseUncheckedUpdateInput_schema_1.ReleaseUncheckedUpdateInputObjectSchema]) }), aggregate: zod_1.z.object({ where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema, ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), _count: zod_1.z.union([zod_1.z.literal(true), ReleaseCountAggregateInput_schema_1.ReleaseCountAggregateInputObjectSchema]).optional(), _min: ReleaseMinAggregateInput_schema_1.ReleaseMinAggregateInputObjectSchema.optional(), _max: ReleaseMaxAggregateInput_schema_1.ReleaseMaxAggregateInputObjectSchema.optional(), _avg: ReleaseAvgAggregateInput_schema_1.ReleaseAvgAggregateInputObjectSchema.optional(), _sum: ReleaseSumAggregateInput_schema_1.ReleaseSumAggregateInputObjectSchema.optional() }), groupBy: zod_1.z.object({ where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ReleaseOrderByWithAggregationInput_schema_1.ReleaseOrderByWithAggregationInputObjectSchema, ReleaseOrderByWithAggregationInput_schema_1.ReleaseOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ReleaseScalarWhereWithAggregatesInput_schema_1.ReleaseScalarWhereWithAggregatesInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), by: zod_1.z.array(ReleaseScalarFieldEnum_schema_1.ReleaseScalarFieldEnumSchema), _count: zod_1.z.union([zod_1.z.literal(true), ReleaseCountAggregateInput_schema_1.ReleaseCountAggregateInputObjectSchema]).optional(), _min: ReleaseMinAggregateInput_schema_1.ReleaseMinAggregateInputObjectSchema.optional(), _max: ReleaseMaxAggregateInput_schema_1.ReleaseMaxAggregateInputObjectSchema.optional(), _avg: ReleaseAvgAggregateInput_schema_1.ReleaseAvgAggregateInputObjectSchema.optional(), _sum: ReleaseSumAggregateInput_schema_1.ReleaseSumAggregateInputObjectSchema.optional() }), count: zod_1.z.object({ where: ReleaseWhereInput_schema_1.ReleaseWhereInputObjectSchema.optional(), orderBy: zod_1.z.union([ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema, ReleaseOrderByWithRelationInput_schema_1.ReleaseOrderByWithRelationInputObjectSchema.array()]).optional(), cursor: ReleaseWhereUniqueInput_schema_1.ReleaseWhereUniqueInputObjectSchema.optional(), take: zod_1.z.number().optional(), skip: zod_1.z.number().optional(), distinct: zod_1.z.array(ReleaseScalarFieldEnum_schema_1.ReleaseScalarFieldEnumSchema).optional(), select: zod_1.z.union([zod_1.z.literal(true), ReleaseCountAggregateInput_schema_1.ReleaseCountAggregateInputObjectSchema]).optional() })
};
