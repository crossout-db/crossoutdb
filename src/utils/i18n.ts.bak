import i18n from "i18next";
import LanguageDetector from "i18next-browser-languagedetector";
import { initReactI18next } from "react-i18next";
import enCommon from "public/locales/en/common.json";
import deCommon from "public/locales/de/common.json";
import ruCommon from "public/locales/ru/common.json";
import zhCommon from "public/locales/zh/common.json";
import enModel from "public/locales/en/model.json";
import deModel from "public/locales/de/model.json";
import ruModel from "public/locales/ru/model.json";
import zhModel from "public/locales/zh/model.json";

export const defaultNS = "common";

const resources = {
  en: {
    common: enCommon,
    model: enModel,
  },
  de: {
    common: deCommon,
    model: deModel,
  },
  ru: {
    common: ruCommon,
    model: ruModel,
  },
  zh: {
    common: zhCommon,
    model: zhModel,
  },
}

const options = {
  // order and from where user language should be detected
  order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],

  // keys or params to lookup language from
  lookupQuerystring: 'lng',
  // lookupCookie: 'i18next',
  // lookupLocalStorage: 'i18nextLng',
  // lookupSessionStorage: 'i18nextLng',
  // lookupFromPathIndex: 0,
  // lookupFromSubdomainIndex: 0,

  // cache user language on
  // caches: ['localStorage', 'cookie'],
  // excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)

  // optional expire and domain for set cookie
  // cookieMinutes: 10,
  // cookieDomain: 'myDomain',

  // optional htmlTag with lang attribute, the default is:
  // htmlTag: document.documentElement,

  // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)
  // cookieOptions: { path: '/', sameSite: 'strict' }
}

i18n
  // detect user language
  // learn more: https://github.com/i18next/i18next-browser-languageDetector
  .use(LanguageDetector)
  // pass the i18n instance to react-i18next.
  .use(initReactI18next)
  // init i18next
  // for all options read: https://www.i18next.com/overview/configuration-options
  .init({
    debug: true,
    detection: options,
    fallbackLng: "en",
    defaultNS,
    resources: resources,
  })
  .catch((error) => console.error(error));

export default i18n;
